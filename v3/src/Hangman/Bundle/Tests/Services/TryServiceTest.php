<?php
/**
 * Created by PhpStorm.
 * User: lennard
 * Date: 22-1-16
 * Time: 11:24
 */

namespace Hangman\Bundle\Tests\Services;


use FOS\RestBundle\Tests\Functional\WebTestCase;
use Hangman\Bundle\Services\TryService;

class TryServiceTest extends WebTestCase
{
    /**
     * @var TryService
     */
    private $tryService;

    public function setUp()
    {
        $tryService = $this->getMockBuilder(TryService::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->tryService  = $tryService;
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function it_can_create_a_new_try_instance()
    {
        $new = TryService::init();

        $this->assertTrue(is_a($new, TryService::class));
    }

    /**
     * @test
     */
    public function it_can_get_the_tries_left()
    {
        $new = TryService::init();

        $this->assertEquals(10, $new->getTries());
    }

    /**
     * @test
     */
    public function it_can_remove_a_try()
    {
        $new = TryService::init();
        $new->removeATry();

        $this->assertEquals(9, $new->getTries());
    }

    /**
     * @test
     */
     public function it_can_serialize_and_unserialize()
     {
         $serialized = (string) TryService::init();
         $object = TryService::init();
         $unserialized = $object->deserialize(unserialize($object));
         $succeed = false;

         if ($unserialized !== false) {
             $succeed = true;
         }

         $this->assertTrue($succeed);
         $this->assertTrue(is_a($unserialized, TryService::class));
     }

    /**
     * @test
     */
    public function it_can_notify_if_no_tries_left()
    {
        $tries = TryService::init(1);
        $notify = $tries->notifyIfNoTriesLeft();

        $this->assertTrue($notify);
    }

    /**
     * @test
     */
    public function it_will_not_notify_if_there_are_tries_left()
    {
        $tries = TryService::init(2);
        $notify = $tries->notifyIfNoTriesLeft();

        $this->assertNotTrue($notify);

    }

}