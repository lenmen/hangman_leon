[2016-01-21 14:26:41] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:26:42] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:26:42] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:26:42] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: strpos(): needle is not a string or an integer" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: strpos(): needle is not a string or an integer at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:28:09] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:28:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:28:10] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:28:10] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: strpos(): needle is not a string or an integer" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: strpos(): needle is not a string or an integer at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:29:07] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:29:07] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:29:08] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:29:08] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: strpos(): needle is not a string or an integer" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: strpos(): needle is not a string or an integer at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:29:27] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:29:28] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:29:29] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:29:29] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: strpos(): needle is not a string or an integer" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: strpos(): needle is not a string or an integer at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:36:30] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:36:30] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:36:31] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:36:31] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: Missing argument 1 for HangmanBundle\Models\WordChecker::getLocationsAndLettersOfContainer(), called in /vagrant/backend/src/HangmanBundle/Game/Domain/Game/Game.php on line 201 and defined" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: Missing argument 1 for HangmanBundle\\Models\\WordChecker::getLocationsAndLettersOfContainer(), called in /vagrant/backend/src/HangmanBundle/Game/Domain/Game/Game.php on line 201 and defined at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:36:50] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:36:50] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:36:51] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:36:51] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:36:51] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",2,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:36:51.137376+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:36:51] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:36:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:36:51] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 105 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:105)"} []
[2016-01-21 14:42:15] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:42:15] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:42:16] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:42:16] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:42:16] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",3,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:42:16.477466+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:42:16] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:42:16] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:42:16] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 107 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:107)"} []
[2016-01-21 14:44:51] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:44:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:44:52] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:44:53] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:44:53] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",4,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:44:53.078908+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:44:53] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:44:53] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:44:53] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 107 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:107)"} []
[2016-01-21 14:45:28] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:45:29] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:45:29] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:45:29] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:45:29] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",5,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:45:29.973686+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:45:29] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:45:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:45:30] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 107 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:107)"} []
[2016-01-21 14:48:36] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:48:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:48:37] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:48:38] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:48:38] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",6,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:48:38.014539+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:48:38] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:48:38] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:48:38] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 108 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:108)"} []
[2016-01-21 14:49:15] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:49:15] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:49:16] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:49:16] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:49:16] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",7,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:49:16.480047+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:49:16] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:49:16] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:49:16] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 108 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:108)"} []
[2016-01-21 14:49:55] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:49:55] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:49:56] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:49:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:49:56] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",8,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:49:56.361768+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:49:56] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["99de82aa-7b45-4586-a979-3e [...]",9,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:49:56.366693+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:49:56] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:49:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["99de82aa-7b45-4586-a979-3e [...]"] []
[2016-01-21 14:49:56] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 109 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:109)"} []
[2016-01-21 14:52:02] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:52:02] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:52:03] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:52:03] request.CRITICAL: Uncaught PHP Exception Exception: "No serializer for \DateTime" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): No serializer for \\DateTime at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:53:42] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:53:43] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:53:43] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"99de82aa-7b45-4586-a979-3e [...]"} []
[2016-01-21 14:53:43] request.CRITICAL: Uncaught PHP Exception Exception: "No serializer for \DateTime" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): No serializer for \\DateTime at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 14:53:55] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 14:53:55] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:53:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:53:56] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["746b9d68-1521-4c0d-a62e-7d [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T14:53:56.534383+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 14:53:56] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:53:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:53:56] doctrine.DEBUG: INSERT INTO gamesstatics (gameId, letterWrongGuessed, letterCorrectlyGuessed, gameStatus, expanededTimeOnGame, gameStartTime, gameEndTime) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"746b9d68-1521-4c0d-a62e-7d [...]","2":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"in progress","5":null,"6":"2016-01-21T14:53:56.497414+00:00","7":null} []
[2016-01-21 14:53:56] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:53:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 14:53:56] doctrine.DEBUG: INSERT INTO game (gameId, word) VALUES (?, ?) {"1":"746b9d68-1521-4c0d-a62e-7d [...]","2":"[object] (HangmanBundle\\Models\\WordChecker: O:32:\"HangmanBundle\\Models\\WordChecker\":1:{s:38:\"\u0000HangmanBundle\\Models\\WordChecker\u0000word\";s:12:\"loyce hudson\";})"} []
[2016-01-21 14:53:56] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 14:54:17] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 14:54:17] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 14:54:18] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"746b9d68-1521-4c0d-a62e-7d [...]"} []
[2016-01-21 14:54:18] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: Invalid argument supplied for foreach()" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: Invalid argument supplied for foreach() at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:06:16] doctrine.DEBUG: CREATE TABLE gameletterschosen (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, letter VARCHAR(255) NOT NULL, correctGuessed TINYINT(1) NOT NULL, misGuessed TINYINT(1) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:06:16] doctrine.DEBUG: CREATE TABLE game (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, word VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:06:16] doctrine.DEBUG: CREATE TABLE gamesstatics (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, letterWrongGuessed VARCHAR(255) DEFAULT NULL, letterCorrectlyGuessed VARCHAR(255) DEFAULT NULL, gameStatus VARCHAR(50) NOT NULL, expanededTimeOnGame VARCHAR(255) DEFAULT NULL, gameStartTime VARCHAR(255) DEFAULT NULL, gameEndTime VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:06:34] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2016-01-21 15:06:34] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'game' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'game' */ WHERE k.table_name = 'game' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'game' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gameletterschosen' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gameletterschosen' */ WHERE k.table_name = 'gameletterschosen' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gameletterschosen' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gamesstatics' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gamesstatics' */ WHERE k.table_name = 'gamesstatics' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:06:35] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gamesstatics' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:06:35] doctrine.DEBUG: CREATE TABLE events (id INT AUTO_INCREMENT NOT NULL, uuid CHAR(36) NOT NULL COMMENT '(DC2Type:guid)', playhead INT UNSIGNED NOT NULL, payload LONGTEXT NOT NULL, metadata LONGTEXT NOT NULL, recorded_on VARCHAR(32) NOT NULL, type LONGTEXT NOT NULL, UNIQUE INDEX UNIQ_5387574AD17F50A634B91FA9 (uuid, playhead), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:09:54] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 15:09:54] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:09:55] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:09:55] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["a33f2764-0e4f-46e4-87ff-c2 [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:09:55.413181+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:09:55] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:09:55] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:09:55] doctrine.DEBUG: INSERT INTO gamesstatics (gameId, letterWrongGuessed, letterCorrectlyGuessed, gameStatus, expanededTimeOnGame, gameStartTime, gameEndTime) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]","2":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"in progress","5":null,"6":"2016-01-21T15:09:55.369776+00:00","7":null} []
[2016-01-21 15:09:55] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:09:55] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:09:55] doctrine.DEBUG: INSERT INTO game (gameId, word) VALUES (?, ?) {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]","2":"[object] (HangmanBundle\\Models\\WordChecker: O:32:\"HangmanBundle\\Models\\WordChecker\":1:{s:38:\"\u0000HangmanBundle\\Models\\WordChecker\u0000word\";s:23:\"mrs. edythe anderson iv\";})"} []
[2016-01-21 15:09:55] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:10:33] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:10:34] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:10:34] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:10:34] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: Invalid argument supplied for foreach()" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: Invalid argument supplied for foreach() at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:14:34] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:14:34] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:14:35] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:14:35] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: Invalid argument supplied for foreach()" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: Invalid argument supplied for foreach() at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:16:57] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:16:58] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:16:58] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:16:59] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:16:59] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["a33f2764-0e4f-46e4-87ff-c2 [...]",1,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:16:59.062328+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:16:59] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:16:59] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:16:59] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 135 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:135)"} []
[2016-01-21 15:18:58] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:18:58] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:18:59] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Parse Error: syntax error, unexpected '$this' (T_VARIABLE)" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 136 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Parse Error: syntax error, unexpected '$this' (T_VARIABLE) at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:136)"} []
[2016-01-21 15:19:10] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:19:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:19:11] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:19:11] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:19:11] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["a33f2764-0e4f-46e4-87ff-c2 [...]",2,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:19:11.563975+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:19:11] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:19:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:19:11] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:19:11] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:1:{i:0;a:1:{i:0;s:1:\"d\";}}}})",1] []
[2016-01-21 15:19:11] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:19:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3 FROM game t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:19:11] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: Undefined property: HangmanBundle\Game\ReadModel\Game::$letterCorrectlyGuessed" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: Undefined property: HangmanBundle\\Game\\ReadModel\\Game::$letterCorrectlyGuessed at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:20:35] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:20:35] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:20:36] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:20:36] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:20:36] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["a33f2764-0e4f-46e4-87ff-c2 [...]",3,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:20:36.658609+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:20:36] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:20:36] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:20:36] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:20:36] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:2:{i:0;a:1:{i:0;s:1:\"d\";}i:1;a:1:{i:0;s:1:\"d\";}}}})",1] []
[2016-01-21 15:20:36] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:20:36] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3 FROM game t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:20:36] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on null" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/Game.php line 141 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on null at /vagrant/backend/src/HangmanBundle/Game/ReadModel/Game.php:141)"} []
[2016-01-21 15:23:38] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:23:38] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:23:38] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Property HangmanBundle\Game\ReadModel\Game::$letterCorrectlyGuessed does not exist" at /vagrant/backend/vendor/doctrine/common/lib/Doctrine/Common/Persistence/Mapping/RuntimeReflectionService.php line 80 {"exception":"[object] (ReflectionException(code: 0): Property HangmanBundle\\Game\\ReadModel\\Game::$letterCorrectlyGuessed does not exist at /vagrant/backend/vendor/doctrine/common/lib/Doctrine/Common/Persistence/Mapping/RuntimeReflectionService.php:80)"} []
[2016-01-21 15:26:51] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'events' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'events' */ WHERE k.table_name = 'events' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'events' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'game' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'game' */ WHERE k.table_name = 'game' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'game' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gameletterschosen' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gameletterschosen' */ WHERE k.table_name = 'gameletterschosen' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gameletterschosen' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gamesstatics' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gamesstatics' */ WHERE k.table_name = 'gamesstatics' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gamesstatics' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'events' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'events' */ WHERE k.table_name = 'events' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'events' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'game' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'game' */ WHERE k.table_name = 'game' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'game' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gameletterschosen' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gameletterschosen' */ WHERE k.table_name = 'gameletterschosen' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gameletterschosen' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gamesstatics' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gamesstatics' */ WHERE k.table_name = 'gamesstatics' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:26:51] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gamesstatics' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:26:51] doctrine.DEBUG: ALTER TABLE game ADD letterWrongGuessed VARCHAR(255) DEFAULT NULL, ADD letterCorrectlyGuessed VARCHAR(255) DEFAULT NULL [] []
[2016-01-21 15:27:36] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:27:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:27:37] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Compile Error: Cannot redeclare HangmanBundle\Game\ReadModel\Game::initLetterCorrectlyGuessed()" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/Game.php line 175 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Compile Error: Cannot redeclare HangmanBundle\\Game\\ReadModel\\Game::initLetterCorrectlyGuessed() at /vagrant/backend/src/HangmanBundle/Game/ReadModel/Game.php:175)"} []
[2016-01-21 15:28:24] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:28:24] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:28:25] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"a33f2764-0e4f-46e4-87ff-c2 [...]"} []
[2016-01-21 15:28:25] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:28:25] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["a33f2764-0e4f-46e4-87ff-c2 [...]",4,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:28:25.473203+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:28:25] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:28:25] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["a33f2764-0e4f-46e4-87ff-c2 [...]"] []
[2016-01-21 15:28:25] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: unserialize(): Error at offset 252 of 255 bytes" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: unserialize(): Error at offset 252 of 255 bytes at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:29:45] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 15:29:45] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:29:46] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:29:46] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["b7fea93d-5097-42c9-9337-69 [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:29:46.951696+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:29:46] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:29:46] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:29:47] doctrine.DEBUG: INSERT INTO gamesstatics (gameId, letterWrongGuessed, letterCorrectlyGuessed, gameStatus, expanededTimeOnGame, gameStartTime, gameEndTime) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"b7fea93d-5097-42c9-9337-69 [...]","2":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"in progress","5":null,"6":"2016-01-21T15:29:46.914730+00:00","7":null} []
[2016-01-21 15:29:47] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:29:47] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:29:47] doctrine.DEBUG: INSERT INTO game (gameId, word, letterWrongGuessed, letterCorrectlyGuessed) VALUES (?, ?, ?, ?) {"1":"b7fea93d-5097-42c9-9337-69 [...]","2":"[object] (HangmanBundle\\Models\\WordChecker: O:32:\"HangmanBundle\\Models\\WordChecker\":1:{s:38:\"\u0000HangmanBundle\\Models\\WordChecker\u0000word\";s:20:\"dr. emmitt klocko iv\";})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})"} []
[2016-01-21 15:29:47] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:30:08] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:30:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:30:09] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"b7fea93d-5097-42c9-9337-69 [...]"} []
[2016-01-21 15:30:09] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:30:09] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["b7fea93d-5097-42c9-9337-69 [...]",1,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:30:09.342577+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:30:09] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:30:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["b7fea93d-5097-42c9-9337-69 [...]"] []
[2016-01-21 15:30:09] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:30:09] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:1:{i:0;a:1:{i:0;s:1:\"l\";}}}})",2] []
[2016-01-21 15:30:09] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:30:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3, t0.letterWrongGuessed AS letterWrongGuessed_4, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_5 FROM game t0 WHERE t0.gameId = ? ["b7fea93d-5097-42c9-9337-69 [...]"] []
[2016-01-21 15:30:09] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function setLetterCorrectlyGuessed() on boolean" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameProjector.php line 48 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function setLetterCorrectlyGuessed() on boolean at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameProjector.php:48)"} []
[2016-01-21 15:31:16] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:31:16] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:31:17] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"b7fea93d-5097-42c9-9337-69 [...]"} []
[2016-01-21 15:31:17] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:31:17] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["b7fea93d-5097-42c9-9337-69 [...]",2,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:31:17.634888+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:31:17] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:31:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["b7fea93d-5097-42c9-9337-69 [...]"] []
[2016-01-21 15:31:17] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:31:17] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:2:{i:0;a:1:{i:0;s:1:\"l\";}i:1;a:1:{i:0;s:1:\"l\";}}}})",2] []
[2016-01-21 15:31:17] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:31:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3, t0.letterWrongGuessed AS letterWrongGuessed_4, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_5 FROM game t0 WHERE t0.gameId = ? ["b7fea93d-5097-42c9-9337-69 [...]"] []
[2016-01-21 15:31:17] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function setLetterCorrectlyGuessed() on boolean" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameProjector.php line 50 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function setLetterCorrectlyGuessed() on boolean at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameProjector.php:50)"} []
[2016-01-21 15:31:41] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:31:41] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:31:42] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"b7fea93d-5097-42c9-9337-69 [...]"} []
[2016-01-21 15:31:42] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:31:42] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["b7fea93d-5097-42c9-9337-69 [...]",3,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:31:42.884856+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:31:42] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:31:42] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["b7fea93d-5097-42c9-9337-69 [...]"] []
[2016-01-21 15:31:42] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: unserialize(): Error at offset 252 of 255 bytes" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: unserialize(): Error at offset 252 of 255 bytes at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:32:42] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 15:32:42] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:32:43] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:32:43] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:32:43.608594+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:32:43] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:32:43] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:32:43] doctrine.DEBUG: INSERT INTO gamesstatics (gameId, letterWrongGuessed, letterCorrectlyGuessed, gameStatus, expanededTimeOnGame, gameStartTime, gameEndTime) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"dc719b6f-39b7-4686-8694-74 [...]","2":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"in progress","5":null,"6":"2016-01-21T15:32:43.562531+00:00","7":null} []
[2016-01-21 15:32:43] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:32:43] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:32:43] doctrine.DEBUG: INSERT INTO game (gameId, word, letterWrongGuessed, letterCorrectlyGuessed) VALUES (?, ?, ?, ?) {"1":"dc719b6f-39b7-4686-8694-74 [...]","2":"[object] (HangmanBundle\\Models\\WordChecker: O:32:\"HangmanBundle\\Models\\WordChecker\":1:{s:38:\"\u0000HangmanBundle\\Models\\WordChecker\u0000word\";s:21:\"mrs. virginia labadie\";})","3":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})","4":"[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:0:{}}})"} []
[2016-01-21 15:32:43] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:32:55] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:32:55] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:32:56] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:32:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:32:56] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",1,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:32:56.921604+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:32:56] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:32:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:32:57] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:32:57] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:1:{i:0;a:1:{i:0;s:1:\"d\";}}}})",3] []
[2016-01-21 15:32:57] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:32:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3, t0.letterWrongGuessed AS letterWrongGuessed_4, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_5 FROM game t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:32:57] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: Undefined property: HangmanBundle\Game\ReadModel\Game::$letterGuessedCorrectly" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: Undefined property: HangmanBundle\\Game\\ReadModel\\Game::$letterGuessedCorrectly at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:33:20] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:33:21] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:33:22] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:33:22] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:33:22] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",2,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:33:22.321455+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:33:22] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:33:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:33:22] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:33:22] doctrine.DEBUG: UPDATE gamesstatics SET letterCorrectlyGuessed = ? WHERE id = ? ["[object] (HangmanBundle\\Models\\LetterSaver: O:32:\"HangmanBundle\\Models\\LetterSaver\":1:{s:50:\"\u0000HangmanBundle\\Models\\LetterSaver\u0000lettersContainer\";O:43:\"Doctrine\\Common\\Collections\\ArrayCollection\":1:{s:53:\"\u0000Doctrine\\Common\\Collections\\ArrayCollection\u0000elements\";a:2:{i:0;a:1:{i:0;s:1:\"d\";}i:1;a:1:{i:0;s:1:\"d\";}}}})",3] []
[2016-01-21 15:33:22] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:33:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.word AS word_3, t0.letterWrongGuessed AS letterWrongGuessed_4, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_5 FROM game t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:33:22] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: Undefined property: HangmanBundle\Game\ReadModel\Game::$letterGuessedCorrectly" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: Undefined property: HangmanBundle\\Game\\ReadModel\\Game::$letterGuessedCorrectly at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:33:44] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:33:45] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:33:46] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:33:46] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:33:46] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",3,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:33:46.315041+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:33:46] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:33:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:33:46] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: unserialize(): Error at offset 252 of 255 bytes" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: unserialize(): Error at offset 252 of 255 bytes at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:35:10] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:35:11] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:35:11] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:35:12] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:35:12] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",4,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:35:12.094619+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:35:12] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:35:12] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:35:12] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: unserialize(): Error at offset 252 of 255 bytes" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: unserialize(): Error at offset 252 of 255 bytes at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:37:57] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:37:57] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:37:57] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:37:57] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:37:57] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",5,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:37:57.978747+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:37:57] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:37:58] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:37:58] request.CRITICAL: Uncaught PHP Exception Exception: "Notice: unserialize(): Error at offset 252 of 255 bytes" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Notice: unserialize(): Error at offset 252 of 255 bytes at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:41:52] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:41:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:41:53] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"dc719b6f-39b7-4686-8694-74 [...]"} []
[2016-01-21 15:41:53] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:41:53] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["dc719b6f-39b7-4686-8694-74 [...]",6,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:41:53.655467+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:41:53] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:41:53] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["dc719b6f-39b7-4686-8694-74 [...]"] []
[2016-01-21 15:41:53] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 138 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:138)"} []
[2016-01-21 15:52:19] doctrine.DEBUG: CREATE TABLE gameletterschosen (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, letter VARCHAR(255) NOT NULL, correctGuessed TINYINT(1) NOT NULL, misGuessed TINYINT(1) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:52:19] doctrine.DEBUG: CREATE TABLE game (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, word VARCHAR(50) NOT NULL, letterWrongGuessed VARCHAR(255) DEFAULT NULL, letterCorrectlyGuessed VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:52:19] doctrine.DEBUG: CREATE TABLE gamesstatics (id INT AUTO_INCREMENT NOT NULL, gameId VARCHAR(50) NOT NULL, letterWrongGuessed VARCHAR(255) DEFAULT NULL, letterCorrectlyGuessed VARCHAR(255) DEFAULT NULL, gameStatus VARCHAR(50) NOT NULL, expanededTimeOnGame VARCHAR(255) DEFAULT NULL, gameStartTime VARCHAR(255) DEFAULT NULL, gameEndTime VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'game' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'game' */ WHERE k.table_name = 'game' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'game' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gameletterschosen' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gameletterschosen' */ WHERE k.table_name = 'gameletterschosen' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gameletterschosen' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'hangman' AND TABLE_NAME = 'gamesstatics' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'gamesstatics' */ WHERE k.table_name = 'gamesstatics' AND k.table_schema = 'hangman' /*!50116 AND c.constraint_schema = 'hangman' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-01-21 15:52:24] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'gamesstatics' AND TABLE_SCHEMA = 'hangman' [] []
[2016-01-21 15:52:24] doctrine.DEBUG: CREATE TABLE events (id INT AUTO_INCREMENT NOT NULL, uuid CHAR(36) NOT NULL COMMENT '(DC2Type:guid)', playhead INT UNSIGNED NOT NULL, payload LONGTEXT NOT NULL, metadata LONGTEXT NOT NULL, recorded_on VARCHAR(32) NOT NULL, type LONGTEXT NOT NULL, UNIQUE INDEX UNIQ_5387574AD17F50A634B91FA9 (uuid, playhead), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB [] []
[2016-01-21 15:52:36] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 15:52:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:52:37] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:52:37] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["719d435b-5618-4fe0-897c-5b [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:52:37.454571+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:52:37] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:52:37] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:52:37] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\UndefinedMethodException: "Attempted to call an undefined method named "toArray" of class "HangmanBundle\Models\LetterSaver"." at /vagrant/backend/src/HangmanBundle/Models/LetterSaver.php line 63 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\UndefinedMethodException(code: 0): Attempted to call an undefined method named \"toArray\" of class \"HangmanBundle\\Models\\LetterSaver\". at /vagrant/backend/src/HangmanBundle/Models/LetterSaver.php:63)"} []
[2016-01-21 15:53:15] request.INFO: Matched route "post_game". {"route_parameters":{"_controller":"hangman.controller.game:postGameAction","_format":"json","_route":"post_game"},"request_uri":"http://backend.hangman.nl/games"} []
[2016-01-21 15:53:15] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:53:16] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:53:16] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["0bf90aaa-09b3-4b99-953b-18 [...]",0,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:53:16.583539+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:53:16] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:53:16] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:53:16] doctrine.DEBUG: INSERT INTO gamesstatics (gameId, letterWrongGuessed, letterCorrectlyGuessed, gameStatus, expanededTimeOnGame, gameStartTime, gameEndTime) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"0bf90aaa-09b3-4b99-953b-18 [...]","2":"[object] (HangmanBundle\\Models\\LetterSaver: a:0:{})","3":"[object] (HangmanBundle\\Models\\LetterSaver: a:0:{})","4":"in progress","5":null,"6":"2016-01-21T15:53:16.542654+00:00","7":null} []
[2016-01-21 15:53:16] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:53:16] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:53:16] doctrine.DEBUG: INSERT INTO game (gameId, word, letterWrongGuessed, letterCorrectlyGuessed) VALUES (?, ?, ?, ?) {"1":"0bf90aaa-09b3-4b99-953b-18 [...]","2":"[object] (HangmanBundle\\Models\\WordChecker: O:32:\"HangmanBundle\\Models\\WordChecker\":1:{s:38:\"\u0000HangmanBundle\\Models\\WordChecker\u0000word\";s:25:\"dr. robert oberbrunner iv\";})","3":"[object] (HangmanBundle\\Models\\LetterSaver: a:0:{})","4":"[object] (HangmanBundle\\Models\\LetterSaver: a:0:{})"} []
[2016-01-21 15:53:16] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:53:29] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:53:29] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:53:30] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"0bf90aaa-09b3-4b99-953b-18 [...]"} []
[2016-01-21 15:53:30] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\UndefinedMethodException: "Attempted to call an undefined method named "addLetterToContainer" of class "HangmanBundle\Models\LetterSaver"." at /vagrant/backend/src/HangmanBundle/Game/Domain/Game/Game.php line 191 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\UndefinedMethodException(code: 0): Attempted to call an undefined method named \"addLetterToContainer\" of class \"HangmanBundle\\Models\\LetterSaver\". at /vagrant/backend/src/HangmanBundle/Game/Domain/Game/Game.php:191)"} []
[2016-01-21 15:57:06] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:57:06] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:57:07] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"0bf90aaa-09b3-4b99-953b-18 [...]"} []
[2016-01-21 15:57:07] request.CRITICAL: Uncaught PHP Exception Exception: "Warning: Missing argument 2 for Doctrine\Common\Collections\ArrayCollection::set(), called in /vagrant/backend/src/HangmanBundle/Models/LetterSaver.php on line 42 and defined" at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php line 242 {"exception":"[object] (Exception(code: 0): Warning: Missing argument 2 for Doctrine\\Common\\Collections\\ArrayCollection::set(), called in /vagrant/backend/src/HangmanBundle/Models/LetterSaver.php on line 42 and defined at /vagrant/backend/src/HangmanBundle/Controller/DefaultController.php:242)"} []
[2016-01-21 15:57:27] request.INFO: Matched route "post_letter". {"route_parameters":{"_controller":"hangman.controller.game:postLetterAction","_format":"json","_route":"post_letter"},"request_uri":"http://backend.hangman.nl/letters"} []
[2016-01-21 15:57:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-01-21 15:57:27] doctrine.DEBUG: SELECT uuid, playhead, metadata, payload, recorded_on                 FROM events                 WHERE uuid = ?                 ORDER BY playhead ASC {"1":"0bf90aaa-09b3-4b99-953b-18 [...]"} []
[2016-01-21 15:57:27] doctrine.DEBUG: "START TRANSACTION" [] []
[2016-01-21 15:57:27] doctrine.DEBUG: INSERT INTO events (uuid, playhead, metadata, payload, recorded_on, type) VALUES (?, ?, ?, ?, ?, ?) ["0bf90aaa-09b3-4b99-953b-18 [...]",1,"{\"class\":\"Broadway\\\\Domain [...]","{\"class\":\"HangmanBundle\\\\G [...]","2016-01-21T15:57:27.985155+00:00","HangmanBundle.Game.Domain. [...]"] []
[2016-01-21 15:57:27] doctrine.DEBUG: "COMMIT" [] []
[2016-01-21 15:57:28] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gameId AS gameId_2, t0.letterWrongGuessed AS letterWrongGuessed_3, t0.letterCorrectlyGuessed AS letterCorrectlyGuessed_4, t0.gameStatus AS gameStatus_5, t0.expanededTimeOnGame AS expanededTimeOnGame_6, t0.gameStartTime AS gameStartTime_7, t0.gameEndTime AS gameEndTime_8 FROM gamesstatics t0 WHERE t0.gameId = ? ["0bf90aaa-09b3-4b99-953b-18 [...]"] []
[2016-01-21 15:57:28] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\FatalErrorException: "Error: Call to a member function addLetterToContainer() on string" at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php line 109 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalErrorException(code: 0): Error: Call to a member function addLetterToContainer() on string at /vagrant/backend/src/HangmanBundle/Game/ReadModel/GameStatics.php:109)"} []
